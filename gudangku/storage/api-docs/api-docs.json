{
    "openapi": "3.0.0",
    "info": {
        "title": "GudangKu",
        "description": "API Documentation for GudangKu",
        "contact": {
            "email": "flazen.edu@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in to the Apps",
                "operationId": "26ae6f7a2668f358293a502309985206",
                "responses": {
                    "200": {
                        "description": "login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "286|L5fqrLCDDCzPRLKngtm2FM9wq1IU2xFZSVAm10yp874a1a85"
                                        },
                                        "role": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "result": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "83ce75db-4016-d87c-2c3c-db1e222d0001"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "flazefy"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "flazen.edu@gmail.com"
                                                },
                                                "telegram_user_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "telegram_is_valid": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "firebase_fcm_token": {
                                                    "type": "string",
                                                    "example": "ddLEuWR2Q_isCmzHTM8UR4:APA91bEmY8TDmH3ZJtKgXw95wFDKLr53FGA2JArDTiN4jzSWxiGzf9VUECYN2oeqYV"
                                                },
                                                "line_user_id": {
                                                    "type": "string",
                                                    "example": "U3356dbe737f22z278e2ba81c71ec5"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+628123456789"
                                                },
                                                "timezone": {
                                                    "type": "string",
                                                    "example": "+07:00"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-14 02:28:37"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-25 09:37:20"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "account is not found or have wrong password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "wrong username or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign out from Apps",
                "description": "This request is used to get sign out from the Apps (sign out from the session). This request is using MySql database, and have a protected routes.",
                "operationId": "8859fad6cbeb2081a7611f5b944b4630",
                "responses": {
                    "200": {
                        "description": "Logout success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary/destroy/{id}": {
            "delete": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Delete dictionary by id",
                "operationId": "94583b591fc7e23ec7439dce49b57f64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "dictionary ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dictionary permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary permentally deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "dictionary failed to permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary": {
            "post": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Post dictionary",
                "description": "Create a new dictionary using the given name and category. This request is using MySQL database.",
                "operationId": "79c44bfafbba7c5f26183942072c5dbb",
                "responses": {
                    "201": {
                        "description": "Dictionary created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DictionaryResponse"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary name must be at least 2 characters"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary type must be one of the following values inventory_category, inventory_unit, inventory_room, reminder_type, reminder_context, report_category"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary_name is a required field"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "failed"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "dictionary name has been used. try another"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dictionary/type/{type}": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Get dictionary by type",
                "description": "This request is used to get dictionary by type. Can be multiple dictionary type if separate using `,`. This request is using MySql database",
                "operationId": "6d288a61d84cc02cf8edd8417d8b36f8",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Dictionary type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "report_category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dictionary fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "dictionary_name": {
                                                        "type": "string",
                                                        "example": "Wishlist"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "dictionary failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "dictionary not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/error": {
            "get": {
                "tags": [
                    "Error"
                ],
                "summary": "Get all error history",
                "description": "This request is used to get all error history recorded. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "bf33aba81463d0c5fa3c23cfacc409aa",
                "responses": {
                    "200": {
                        "description": "history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "error history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": 25
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "example": "count(): Argument #1 ($value) must be of type Countable|array, null given"
                                                            },
                                                            "stack_trace": {
                                                                "type": "string",
                                                                "example": "... require_once('/Users/leonardh...')\\n#41 {main}"
                                                            },
                                                            "file": {
                                                                "type": "string",
                                                                "example": "ErrorApi/Queries.php"
                                                            },
                                                            "line": {
                                                                "type": "number",
                                                                "example": 20
                                                            },
                                                            "is_fixed": {
                                                                "type": "boolean",
                                                                "example": "0"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "faced_by": {
                                                                "type": "string",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this feature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "history failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "error history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/history/destroy/{id}": {
            "delete": {
                "tags": [
                    "History"
                ],
                "summary": "Delete history by id",
                "operationId": "b777472bb6f3263bd117c26cfecd4dd4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "History ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "history permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history permentally deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "history failed to permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/history": {
            "get": {
                "tags": [
                    "History"
                ],
                "summary": "Get all history",
                "description": "This request is used to get all history when user use the App. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "0f4b533e7eecea6a89a6388545c72dd8",
                "responses": {
                    "200": {
                        "description": "history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "history_type": {
                                                                "type": "string",
                                                                "example": "Create"
                                                            },
                                                            "history_context": {
                                                                "type": "string",
                                                                "example": "Barang bawaan"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "created_by": {
                                                                "type": "string",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "history failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/delete/{id}": {
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Soft delete inventory by id",
                "operationId": "d65b6267122c2410dff781b1461cae47",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/edit_image/{id}": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Edit inventory image by id",
                "operationId": "dc13b76471a2a85fec8a5770f52cfd53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory image updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory image updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory image failed to updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/destroy/{id}": {
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Hard delete inventory by id",
                "operationId": "ae5f98a956e96b3d5bae34c2deeecc7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory permentally deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to permentally deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/fav_toggle/{id}": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Toogle favorite inventory by id",
                "operationId": "dffa279787dd7b1382bd1a05d2d5f0ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/recover/{id}": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Recover inventory by id",
                "operationId": "6e035ca103c77ff0b063ef9ade841f95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory recovered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory recovered"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to recovered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get all inventory",
                "description": "This request is used to get all inventory data. This request is using MySql database, has protected routes, and supports pagination.",
                "operationId": "72cde67a8149d3cf2ca3da99f4ba6f8b",
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory fetched"
                                        },
                                        "lend_data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "inventory_category": {
                                                        "type": "string",
                                                        "example": "Food & Beverages"
                                                    },
                                                    "list_inventory": {
                                                        "type": "string",
                                                        "example": "Nike Air Force 1 High By You"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "Nike Air Force 1 High By You"
                                                            },
                                                            "inventory_category": {
                                                                "type": "string",
                                                                "example": "Fashion"
                                                            },
                                                            "inventory_desc": {
                                                                "type": "string",
                                                                "example": "Sepatu High"
                                                            },
                                                            "inventory_merk": {
                                                                "type": "string",
                                                                "example": "Nike"
                                                            },
                                                            "inventory_room": {
                                                                "type": "string",
                                                                "example": "Main Room"
                                                            },
                                                            "inventory_storage": {
                                                                "type": "string",
                                                                "example": "Wardrobe"
                                                            },
                                                            "inventory_rack": {
                                                                "type": "string",
                                                                "example": "Shoes & Sandals - Bottom"
                                                            },
                                                            "inventory_price": {
                                                                "type": "number",
                                                                "example": 2249000
                                                            },
                                                            "inventory_image": {
                                                                "type": "string",
                                                                "example": "https://example.com/inventory/image.jpg"
                                                            },
                                                            "inventory_unit": {
                                                                "type": "string",
                                                                "example": "Pcs"
                                                            },
                                                            "inventory_vol": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "inventory_capacity_unit": {
                                                                "type": "string",
                                                                "example": "percentage"
                                                            },
                                                            "inventory_capacity_vol": {
                                                                "type": "integer",
                                                                "example": 80
                                                            },
                                                            "inventory_color": {
                                                                "type": "string",
                                                                "example": "Black"
                                                            },
                                                            "is_favorite": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "is_reminder": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-03-19 02:37:58"
                                                            },
                                                            "created_by": {
                                                                "type": "string",
                                                                "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-07-18 15:50:18"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-05-02 03:32:31"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Create inventory",
                "operationId": "1331e3da20b1fb761c3225c7c994df88",
                "responses": {
                    "201": {
                        "description": "inventory created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory created, its called product A"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory is already exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/edit/{id}": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update inventory By Id",
                "operationId": "184a8e256064c66ebd611786134c034d",
                "responses": {
                    "200": {
                        "description": "inventory updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory 'product A' is updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory is already exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/edit_layout/{id}": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update inventory layout by id",
                "operationId": "bd5ddb16fd44194f530b68bf1bc479cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory Layout ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory layout updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/layout": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Post inventory layout",
                "operationId": "301030d32cd3c3ee9b3a5ec047594e5e",
                "responses": {
                    "201": {
                        "description": "inventory layout coordinate created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout coordinate created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/delete_layout/{id}/{coor}": {
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Delete inventory layout",
                "operationId": "ae80b67dad513d00fbb6277ca9ad5095",
                "responses": {
                    "200": {
                        "description": "inventory layout coordinate deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout coordinate deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/list": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get list inventory",
                "description": "This request is used to get all inventory data but in shot format for selection. This request is using MySql database, and has protected routes",
                "operationId": "cf662e6cbceaa6dd82ec4154ff84057d",
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                    },
                                                    "inventory_name": {
                                                        "type": "string",
                                                        "example": "Nike Air Force 1 High By You"
                                                    },
                                                    "inventory_unit": {
                                                        "type": "string",
                                                        "example": "Pcs"
                                                    },
                                                    "inventory_vol": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/calendar": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory as calendar format",
                "description": "This request is used to get all inventory data but in calendar format. This request is using MySql database, and has protected routes",
                "operationId": "2db05fcbb4f2038bd4d17acd939bf5d5",
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                    },
                                                    "inventory_name": {
                                                        "type": "string",
                                                        "example": "Nike Air Force 1 High By You"
                                                    },
                                                    "inventory_price": {
                                                        "type": "number",
                                                        "example": 2249000
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-03-19 02:37:58"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/room": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory room",
                "description": "This request is used to get all inventory room. This request is using MySql database, and has protected routes",
                "operationId": "f8e78db937554a9da1f9d3efad054fac",
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory room fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "inventory_room": {
                                                        "type": "string",
                                                        "example": "Main Room"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory room failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory room not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/layout/{room}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory layout by room",
                "description": "This request is used to get inventory layout to show storage by room. This request is using MySql database, and has protected routes",
                "operationId": "ccf4f45e46de0d504d18be3f7a68ad7f",
                "parameters": [
                    {
                        "name": "room",
                        "in": "path",
                        "description": "Inventory storage's room",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Main Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "17963858-9771-11ee-8f4a-3216422910r4"
                                                    },
                                                    "inventory_storage": {
                                                        "type": "string",
                                                        "example": "Wardobe"
                                                    },
                                                    "storage_desc": {
                                                        "type": "string",
                                                        "example": "Store my clothes"
                                                    },
                                                    "layout": {
                                                        "type": "string",
                                                        "example": "D1:E3"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory layout failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory layout not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/search/by_room_storage/{room}/{storage}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory in storage",
                "description": "This request is used to get all inventory data in layout page. This request is using MySql database, and has protected routes",
                "operationId": "538429ed92457a5e9731a5e8b5f0c572",
                "parameters": [
                    {
                        "name": "room",
                        "in": "path",
                        "description": "Inventory storage's room",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Main Room"
                        }
                    },
                    {
                        "name": "storage",
                        "in": "path",
                        "description": "Inventory storage",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Main Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                    },
                                                    "inventory_name": {
                                                        "type": "string",
                                                        "example": "Cake"
                                                    },
                                                    "inventory_unit": {
                                                        "type": "string",
                                                        "example": "Pcs"
                                                    },
                                                    "inventory_vol": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "inventory_price": {
                                                        "type": "integer",
                                                        "example": 200000
                                                    },
                                                    "inventory_category": {
                                                        "type": "string",
                                                        "example": "Food And Beverages"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/detail/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory detail",
                "description": "Fetch inventory details and reminders by the given inventory's `id`. This request uses a MySQL database and requires authentication with a protected route.",
                "operationId": "5e02e110b3ba4e5334cfa9d4eff6281a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "09397f65-211e-3598-2fa5-b50cdba5183c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "83ce75db-4016-d87c-2c3c-db1e222d0001"
                                                },
                                                "inventory_name": {
                                                    "type": "string",
                                                    "example": "Stand Bracket Laptop"
                                                },
                                                "inventory_category": {
                                                    "type": "string",
                                                    "example": "Office Tools"
                                                },
                                                "inventory_desc": {
                                                    "type": "string",
                                                    "example": "Stand 2 laptop dan hp"
                                                },
                                                "inventory_merk": {
                                                    "type": "string",
                                                    "example": "A Merk"
                                                },
                                                "inventory_room": {
                                                    "type": "string",
                                                    "example": "Main Room"
                                                },
                                                "inventory_storage": {
                                                    "type": "string",
                                                    "example": "Desk"
                                                },
                                                "inventory_rack": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "inventory_price": {
                                                    "type": "integer",
                                                    "example": 28200
                                                },
                                                "inventory_image": {
                                                    "type": "string",
                                                    "example": "https://firebasestorage.googleapis.com/v0/b/gudangku-94edc.appspot.com/o/inventory%2F2d98f524-de02-11ed-b5ea-0242ac120002_flazefy%2Fdbc22192-f630-4c68-8a95-d148de537bde?alt=media&token=ac5e7d97-9711-4f4e-b22e-4ff911cf6006"
                                                },
                                                "inventory_unit": {
                                                    "type": "string",
                                                    "example": "Pcs"
                                                },
                                                "inventory_vol": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "inventory_capacity_unit": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "inventory_capacity_vol": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "inventory_color": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "is_favorite": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "is_reminder": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-14 02:28:37"
                                                },
                                                "created_by": {
                                                    "type": "string",
                                                    "example": "2d98f524-de02-11ed-b5ea-0242ac120002"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-25 09:37:20"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "reminder": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "26c0092a-5013-2a81-3a36-fc0abeb7ce6e"
                                                    },
                                                    "reminder_desc": {
                                                        "type": "string",
                                                        "example": "Clean using hand sanitizer and micellar water"
                                                    },
                                                    "reminder_type": {
                                                        "type": "string",
                                                        "example": "Every Month"
                                                    },
                                                    "reminder_context": {
                                                        "type": "string",
                                                        "example": "Every 1"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-07-16T00:06:05.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization token required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Inventory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/detail/{id}/doc": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get inventory detail html format by id",
                "description": "This request is used to get inventory detail html format for document generate. This request is using MySQL database, and has protected routes.",
                "operationId": "5dee1199250f2019993360b86e3955dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory detail document generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory detail document generated"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "<p>Ini document</p>"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory detail document failed to generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/layout/{room}/doc": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get room layout html format by id",
                "description": "This request is used to get room layout html format for document generate. This request is using MySQL database, and has protected routes.",
                "operationId": "e18d00f2d972674816715f288776385b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Main%20Room"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "room document generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory room document generated"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "<p>Ini document</p>"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "room document failed to generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/analyze/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get analyze data of inventory by id",
                "description": "This request is used to get analyze data of inventory. This request is using MySQL database, and has protected routes.",
                "operationId": "08cb649c09363567a1580cd526190c30",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory analyzed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory analyzed"
                                        },
                                        "data": {
                                            "properties": {
                                                "inventory_name": {
                                                    "type": "string",
                                                    "example": "odio omnis cum"
                                                },
                                                "inventory_price": {
                                                    "type": "integer",
                                                    "example": 4145000
                                                },
                                                "inventory_category": {
                                                    "type": "string",
                                                    "example": "Skin & Body Care"
                                                },
                                                "inventory_room": {
                                                    "type": "string",
                                                    "example": "Car Cabin"
                                                },
                                                "inventory_storage": {
                                                    "type": "string",
                                                    "example": "Stand"
                                                },
                                                "inventory_rack": {
                                                    "type": "string",
                                                    "example": "Rack-b3"
                                                },
                                                "inventory_unit": {
                                                    "type": "string",
                                                    "example": "Pcs"
                                                },
                                                "inventory_vol": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-10-24 21:15:01"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-03 18:25:48"
                                                },
                                                "inventory_price_analyze": {
                                                    "properties": {
                                                        "average_inventory_price": {
                                                            "type": "integer",
                                                            "example": 2473052
                                                        },
                                                        "max_inventory_price": {
                                                            "type": "integer",
                                                            "example": 4995000
                                                        },
                                                        "min_inventory_price": {
                                                            "type": "integer",
                                                            "example": 30000
                                                        },
                                                        "diff_ammount_average_to_price": {
                                                            "type": "integer",
                                                            "example": -1671948
                                                        },
                                                        "diff_status_average_to_price": {
                                                            "type": "string",
                                                            "example": "More Expensive"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inventory_category_analyze": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 98
                                                        },
                                                        "average_price": {
                                                            "type": "integer",
                                                            "example": 2418571
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inventory_room_analyze": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 83
                                                        },
                                                        "average_price": {
                                                            "type": "integer",
                                                            "example": 2515723
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inventory_unit_analyze": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 84
                                                        },
                                                        "average_price": {
                                                            "type": "integer",
                                                            "example": 2439762
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inventory_history_analyze": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "report_category": {
                                                                "type": "string",
                                                                "example": "Others"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "inventory_report": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2024-09-14 02:22:18"
                                                            },
                                                            "report_title": {
                                                                "type": "string",
                                                                "example": "et amet"
                                                            },
                                                            "report_category": {
                                                                "type": "string",
                                                                "example": "Others"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "inventory_in_monthly_report": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "context": {
                                                                "type": "string",
                                                                "example": "Jan"
                                                            },
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "inventory_layout": {
                                                    "properties": {
                                                        "inventory_storage": {
                                                            "type": "string",
                                                            "example": "Wardobe"
                                                        },
                                                        "layout": {
                                                            "type": "string",
                                                            "example": "E1"
                                                        },
                                                        "storage_desc": {
                                                            "type": "string",
                                                            "example": "Lorem ipsum"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2024-10-25 09:13:00"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inventory_activity_report": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "context": {
                                                                "type": "string",
                                                                "example": "2024-12-02"
                                                            },
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "day": {
                                                                "type": "string",
                                                                "example": "Monday"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "inventory detail document failed to analyze",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lend": {
            "post": {
                "tags": [
                    "Lend"
                ],
                "summary": "Create lend QR",
                "operationId": "9bf37bf370c9fdb0889e8d1fe0d44ef8",
                "responses": {
                    "201": {
                        "description": "lend created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend created, inventory can now seen by others"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Data is already exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend is already exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lend/inventory/{lend_id}": {
            "get": {
                "tags": [
                    "Lend"
                ],
                "summary": "Get lend inventory",
                "description": "This request is used to get lend inventory by lend id (QR Code). This request is using MySQL database, and has protected routes.",
                "operationId": "be3b68c7289d41e6fa46a4385c33d4f7",
                "responses": {
                    "200": {
                        "description": "lend inventory fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend inventory fetched"
                                        },
                                        "owner": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "d8b5d4cc-805d-3303-3966-dc767c062d27"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "flazefy"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "Nike Air Force 1 High By You"
                                                            },
                                                            "inventory_category": {
                                                                "type": "string",
                                                                "example": "Fashion"
                                                            },
                                                            "inventory_desc": {
                                                                "type": "string",
                                                                "example": "Sepatu High"
                                                            },
                                                            "inventory_merk": {
                                                                "type": "string",
                                                                "example": "Nike"
                                                            },
                                                            "inventory_room": {
                                                                "type": "string",
                                                                "example": "Main Room"
                                                            },
                                                            "inventory_storage": {
                                                                "type": "string",
                                                                "example": "Wardrobe"
                                                            },
                                                            "inventory_rack": {
                                                                "type": "string",
                                                                "example": "Shoes & Sandals - Bottom"
                                                            },
                                                            "inventory_image": {
                                                                "type": "string",
                                                                "example": "https://example.com/inventory/image.jpg"
                                                            },
                                                            "inventory_unit": {
                                                                "type": "string",
                                                                "example": "Pcs"
                                                            },
                                                            "inventory_vol": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "inventory_color": {
                                                                "type": "string",
                                                                "example": "Black"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-03-19 02:37:58"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "lend inventory failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Lend"
                ],
                "summary": "Create request borrow",
                "operationId": "5c1edd5ad056072b8a66098e2f405b24",
                "responses": {
                    "201": {
                        "description": "borrow created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "borrow has sended, we also give you the evidence"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "lend is expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "is_expired": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend already expired, inform the owner to create a new lend"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lend/update_status/{lend_id}": {
            "put": {
                "tags": [
                    "Lend"
                ],
                "summary": "Update Returned Status Of Lend Inventory",
                "operationId": "227474d972f3722f8901ce7f2fd56d7c",
                "responses": {
                    "200": {
                        "description": "lend created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lend/qr": {
            "get": {
                "tags": [
                    "Lend"
                ],
                "summary": "Get active qr code",
                "description": "This request is used to get active qr code. This request is using MySQL database, and has protected routes.",
                "operationId": "029e54323b95a830c4b34ccde6c4d1be",
                "responses": {
                    "200": {
                        "description": "lend qr code fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend qr code fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "d8b5d4cc-805d-3303-3966-dc767c062d27"
                                                },
                                                "lend_qr_url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://storage.googleapis.com/download/storage/v1/b/gudangku-94edc.appspot.com/o/lend%2F..."
                                                },
                                                "qr_period": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-19 02:37:58"
                                                },
                                                "lend_desc": {
                                                    "type": "string",
                                                    "example": "lorem ipsum"
                                                },
                                                "lend_expired_datetime": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-19 04:37:58"
                                                },
                                                "is_expired": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "qr is code is exist but expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend qr code is expired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "lend qr code failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend qr code not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "qr is code cant generated due to empty inventory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you must have at least one inventory to generate QR"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/lend/history": {
            "get": {
                "tags": [
                    "Lend"
                ],
                "summary": "Get history qr code",
                "description": "This request is used to get history of qr code. This request is using MySQL database, and has protected routes.",
                "operationId": "f12bc945a874c0f200a9311a5a872951",
                "responses": {
                    "200": {
                        "description": "lend qr code fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend qr code fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "format": "uuid",
                                                                "example": "d8b5d4cc-805d-3303-3966-dc767c062d27"
                                                            },
                                                            "lend_qr_url": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "example": "https://storage.googleapis.com/download/storage/v1/b/gudangku-94edc.appspot.com/o/lend%2F..."
                                                            },
                                                            "qr_period": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-03-19 02:37:58"
                                                            },
                                                            "lend_desc": {
                                                                "type": "string",
                                                                "example": "lorem ipsum"
                                                            },
                                                            "lend_status": {
                                                                "type": "string",
                                                                "example": "expired"
                                                            },
                                                            "is_finished": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "list_inventory": {
                                                                "type": "string",
                                                                "example": "Herborist Aloe Vera Gel (Skin & Body Care), Palmolive Shower Gel Absoule Relax (Food And Beverages)"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "lend qr code failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "lend qr code not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Create a reminder",
                "operationId": "0d8df3357f5e549d080b43568c02a0ac",
                "responses": {
                    "201": {
                        "description": "reminder created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "reminder with same type and context has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder with same type and context has been used"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder/copy": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Create a copy of reminder to another inventory",
                "operationId": "2e976960f4d1c5818abebf4342ab5caa",
                "responses": {
                    "201": {
                        "description": "reminder created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "reminder with same type and context has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder with same type and context has been used or inventory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder/re_remind": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Create a reminder",
                "operationId": "14e3b1365d2e58696172944e27165623",
                "responses": {
                    "201": {
                        "description": "reminder re-executed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder re-executed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder/{id}": {
            "delete": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Delete reminder by id",
                "operationId": "7123e739147cbc99531f035b9a207d32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reminder ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reminder deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder/mark": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get all reminder scheduler mark",
                "description": "This request is used to get all executed reminder mark. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "d84b6728220b2eda4272f27320dc36b8",
                "responses": {
                    "200": {
                        "description": "reminder mark fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder mark fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "Skintific Mugwort Clay Mask"
                                                            },
                                                            "inventory_category": {
                                                                "type": "string",
                                                                "example": "Skin & Body Care"
                                                            },
                                                            "reminder_desc": {
                                                                "type": "string",
                                                                "example": "Restock at https://tokopedia.link/rBfBm3vVDIb\\r\\nBeli 2 boleh"
                                                            },
                                                            "reminder_type": {
                                                                "type": "string",
                                                                "example": "Every Month"
                                                            },
                                                            "reminder_context": {
                                                                "type": "string",
                                                                "example": "Every 19"
                                                            },
                                                            "last_executed": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "flazefy"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder mark failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder mark not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reminder/history": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get all reminder scheduler history",
                "description": "This request is used to get all executed reminder history. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "41e551edb776ca689743cbbbefc98b10",
                "responses": {
                    "200": {
                        "description": "reminder history fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "Skintific Mugwort Clay Mask"
                                                            },
                                                            "reminder_desc": {
                                                                "type": "string",
                                                                "example": "Restock at https://tokopedia.link/rBfBm3vVDIb\\r\\nBeli 2 boleh"
                                                            },
                                                            "reminder_type": {
                                                                "type": "string",
                                                                "example": "Every Month"
                                                            },
                                                            "reminder_context": {
                                                                "type": "string",
                                                                "example": "Every 19"
                                                            },
                                                            "last_executed": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "reminder history failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reminder history not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/delete/item/{id}": {
            "delete": {
                "tags": [
                    "Report"
                ],
                "summary": "Hard delete report item by id",
                "operationId": "c34be0425e5d835998032cc959162f9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report Item ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "report item deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report item deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report item failed to deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/delete/report/{id}": {
            "delete": {
                "tags": [
                    "Report"
                ],
                "summary": "Hard delete report by id",
                "operationId": "7cdf0bd847708c5176cb9630ca860e54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "report deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report failed to deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/update/report/{id}": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update report detail by id",
                "operationId": "a1a607770381785c9425be35e8f1eaaa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "report updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report failed to updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/update/report_item/{id}": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update report item by id",
                "operationId": "1335e0924ab1aa5159c288838934925b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report Item ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "report item updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report item updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report item failed to updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/update/report_split/{id}": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update report item by splitting it into a new report",
                "operationId": "7a8928b7180b28333c6c7837b17f9085",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID to split from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "report_title": {
                                        "type": "string",
                                        "example": "New Balance"
                                    },
                                    "report_desc": {
                                        "type": "string",
                                        "example": "Sepatu track"
                                    },
                                    "report_category": {
                                        "type": "string",
                                        "example": "Home Supplies"
                                    },
                                    "is_reminder": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "remind_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-01T12:00:00Z"
                                    },
                                    "list_id": {
                                        "type": "string",
                                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9,e1288783-a5d4-1c4c-2cd6-0e92f7cc4a0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated and split report items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "all report items updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "validation failed : {validation errors}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report or Report Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get all report",
                "description": "This request is used to get all report. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "d029cd8980b4c01c157b8677b1b61621",
                "responses": {
                    "200": {
                        "description": "report fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "report_title": {
                                                                "type": "string",
                                                                "example": "Report A"
                                                            },
                                                            "report_desc": {
                                                                "type": "string",
                                                                "example": "This is a report description"
                                                            },
                                                            "report_category": {
                                                                "type": "string",
                                                                "example": "Shopping Cart"
                                                            },
                                                            "is_reminder": {
                                                                "type": "integer",
                                                                "example": "0"
                                                            },
                                                            "reminder_at": {
                                                                "type": "object",
                                                                "example": ""
                                                            },
                                                            "total_variety": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "total_item": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "report_items": {
                                                                "type": "string",
                                                                "example": "Nivea Extra White Repair & Protect"
                                                            },
                                                            "item_price": {
                                                                "type": "integer",
                                                                "example": "20000"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "report_header": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "report_title": {
                                                        "type": "string",
                                                        "example": "Report A"
                                                    },
                                                    "report_items": {
                                                        "type": "string",
                                                        "example": "Nivea Extra White Repair & Protect"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create a new report",
                "operationId": "cb40684ef38c6cab29e6f6f46eaf38f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "report_title": {
                                        "type": "string",
                                        "example": "New Balance"
                                    },
                                    "report_desc": {
                                        "type": "string",
                                        "example": "Sepatu track"
                                    },
                                    "report_category": {
                                        "type": "string",
                                        "example": "Checkout"
                                    },
                                    "report_item": {
                                        "type": "string",
                                        "example": "[{'inventory_id': '0216dd75-8ea6-3779-2ea6-9121c1a8c447','item_name': 'New Balance','item_desc': 'Sepatu','item_qty': 1,'item_price': 2249000}]"
                                    },
                                    "is_reminder": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "remind_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-12-01T12:00:00Z"
                                    },
                                    "file": {
                                        "type": "file",
                                        "example": "image.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully created report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report created and its item | Report created and some item has been added: item a, item b. About 1 inventory failed to add"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "| Failed to upload the 2-th file"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed: {validation errors}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/item/{id}": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create a new report item",
                "operationId": "592f269ed33b23ec6098a6d3e2c89c8a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "report_item": {
                                        "type": "string",
                                        "example": "[{'inventory_id': '0216dd75-8ea6-3779-2ea6-9121c1a8c447','item_name': 'New Balance','item_desc': 'Sepatu','item_qty': 1,'item_price': 2249000}]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully created report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report item created"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "| Failed to upload the 2-th file"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed: {validation errors}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analyze/report": {
            "post": {
                "tags": [
                    "Analyze"
                ],
                "summary": "Analyze report",
                "operationId": "024bee4dd9e741cab81d01c114ea3edb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "file",
                                        "example": "image.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully analyzed report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report analyzed"
                                        },
                                        "data": {
                                            "properties": {
                                                "analyze_item": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "New Balance"
                                                    }
                                                },
                                                "found_inventory_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "d6ecca7c-bf04-f2a9-123a-378b6cb999de"
                                                            },
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "New Balance"
                                                            },
                                                            "inventory_desc": {
                                                                "type": "string",
                                                                "example": "Sepatu High"
                                                            },
                                                            "inventory_vol": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "inventory_unit": {
                                                                "type": "string",
                                                                "example": "Kilogram"
                                                            },
                                                            "inventory_category": {
                                                                "type": "string",
                                                                "example": "Food And Beverages"
                                                            },
                                                            "inventory_price": {
                                                                "type": "integer",
                                                                "example": 2249000
                                                            },
                                                            "inventory_room": {
                                                                "type": "string",
                                                                "example": "Bathroom"
                                                            },
                                                            "inventory_storage": {
                                                                "type": "string",
                                                                "example": "Wardrobe"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "matched"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "found_inventory_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "context": {
                                                                "type": "string",
                                                                "example": "Food And Beverages"
                                                            },
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "found_total_price": {
                                                    "type": "integer",
                                                    "example": 9014000
                                                },
                                                "found_total_item": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "found_avg_price": {
                                                    "type": "integer",
                                                    "example": 1802800
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "example": "3 days and 8 hours ago"
                                                },
                                                "not_existing_item": {
                                                    "type": "string",
                                                    "example": "Item L"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed: {validation errors}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report analyzed : No similar inventory found based on the document item"
                                        },
                                        "data": {
                                            "properties": {
                                                "not_existing_item": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Item L"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analyze/report/new": {
            "post": {
                "tags": [
                    "Analyze"
                ],
                "summary": "Create Analyze report",
                "operationId": "b0bab1b5d7eea9b06fc7860a66f75c91",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to be analyzed",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully analyzed report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report analyzed"
                                        },
                                        "data": {
                                            "properties": {
                                                "analyze_item": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "New Balance"
                                                    }
                                                },
                                                "found_inventory_data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "d6ecca7c-bf04-f2a9-123a-378b6cb999de"
                                                            },
                                                            "inventory_name": {
                                                                "type": "string",
                                                                "example": "New Balance"
                                                            },
                                                            "inventory_desc": {
                                                                "type": "string",
                                                                "example": "Sepatu High"
                                                            },
                                                            "inventory_vol": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "inventory_unit": {
                                                                "type": "string",
                                                                "example": "Kilogram"
                                                            },
                                                            "inventory_category": {
                                                                "type": "string",
                                                                "example": "Food And Beverages"
                                                            },
                                                            "inventory_price": {
                                                                "type": "integer",
                                                                "example": 2249000
                                                            },
                                                            "inventory_room": {
                                                                "type": "string",
                                                                "example": "Bathroom"
                                                            },
                                                            "inventory_storage": {
                                                                "type": "string",
                                                                "example": "Wardrobe"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "matched"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "found_inventory_category": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "context": {
                                                                "type": "string",
                                                                "example": "Food And Beverages"
                                                            },
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "found_total_price": {
                                                    "type": "integer",
                                                    "example": 9014000
                                                },
                                                "found_total_item": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "found_avg_price": {
                                                    "type": "integer",
                                                    "example": 1802800
                                                },
                                                "generated_at": {
                                                    "type": "string",
                                                    "example": "3 days and 8 hours ago"
                                                },
                                                "not_existing_item": {
                                                    "type": "string",
                                                    "example": "Item L"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed: {validation errors}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Report analyzed: No similar inventory found based on the document item"
                                        },
                                        "data": {
                                            "properties": {
                                                "not_existing_item": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Item L"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analyze/report/bill": {
            "post": {
                "tags": [
                    "Analyze"
                ],
                "summary": "Analyze bill or receipt",
                "operationId": "8a990c07957372bd39bea2cc025e90a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Bill or receipt file to be analyzed",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File successfully analyzed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File analyzed successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "item_name": {
                                                        "type": "string",
                                                        "example": "New Balance"
                                                    },
                                                    "item_price": {
                                                        "type": "integer",
                                                        "example": 2249000
                                                    },
                                                    "item_qty": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The file must be a jpg, jpeg, gif, png, or pdf file type | you need to attached a file"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No matching inventory items found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong. Please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/{search}/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get all report by inventory",
                "description": "This request is used to get all report found in a inventory by inventory name and report id. This request is using MySql database, have a protected routes, and have template pagination.",
                "operationId": "3ae3972762a57830e21afb9058f0cfba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    },
                    {
                        "name": "search",
                        "in": "path",
                        "description": "Inventory Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Nivea%20Extra%20White%20Repair%20&%20Protect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "report fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "history fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                            },
                                                            "report_title": {
                                                                "type": "string",
                                                                "example": "Report A"
                                                            },
                                                            "report_desc": {
                                                                "type": "string",
                                                                "example": "This is a report description"
                                                            },
                                                            "report_category": {
                                                                "type": "string",
                                                                "example": "Shopping Cart"
                                                            },
                                                            "is_reminder": {
                                                                "type": "integer",
                                                                "example": "0"
                                                            },
                                                            "reminder_at": {
                                                                "type": "object",
                                                                "example": ""
                                                            },
                                                            "total_variety": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "total_item": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "report_items": {
                                                                "type": "string",
                                                                "example": "Nivea Extra White Repair & Protect"
                                                            },
                                                            "item_price": {
                                                                "type": "integer",
                                                                "example": "20000"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-09-20 22:53:47"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/detail/item/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report detail by id",
                "description": "This request is used to get report detail by id and all items found in the report. This request is using MySQL database, and has protected routes.",
                "operationId": "94a001b2888362d49f99eea06f083a52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                },
                                                "report_title": {
                                                    "type": "string",
                                                    "example": "Report A"
                                                },
                                                "report_desc": {
                                                    "type": "string",
                                                    "example": "This is a report description"
                                                },
                                                "report_category": {
                                                    "type": "string",
                                                    "example": "Shopping Cart"
                                                },
                                                "report_image": {
                                                    "type": "string",
                                                    "example": "https://..."
                                                },
                                                "is_reminder": {
                                                    "type": "integer",
                                                    "example": "0"
                                                },
                                                "reminder_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "total_item": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-20 22:53:47"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data_item": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                    },
                                                    "item_name": {
                                                        "type": "string",
                                                        "example": "Nivea Extra White Repair & Protect"
                                                    },
                                                    "item_desc": {
                                                        "type": "string",
                                                        "example": "This is a report description"
                                                    },
                                                    "item_qty": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "item_price": {
                                                        "type": "integer",
                                                        "example": 20000
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-09-20 22:53:47"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/report/detail/item/{id}/doc": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report detail document html format by id",
                "description": "This request is used to get report detail by id and all items found in the report. This request is using MySQL database, and has protected routes.",
                "operationId": "df215c71971892dcd3be176911f5dd11",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report document generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report generated"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "<p>Ini document</p>"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "report document failed to generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "report not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/total_by_category/{type}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total inventory by category",
                "description": "This request is used to get total inventory by its category. This request is using MySql database, and have a protected routes.",
                "operationId": "315a78bddbeb2b8b9468fd261406b387",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Stats inventory view type: either 'item' for count or 'price' for sum of prices",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "item",
                                "price"
                            ],
                            "example": "item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Fashion"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/category/most_expensive": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get most expensive inventory per context",
                "description": "This request is used to get most expensive inventory for each category. This request is using MySql database, and have a protected routes.",
                "operationId": "73302dd1448db32eb2ca72c26f5c15d2",
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Fashion (Shirt A)"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 200000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/total_by_favorite/{type}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total inventory by favorite",
                "description": "This request is used to get total inventory by its favorite. This request is using MySql database, and have a protected routes.",
                "operationId": "f70fdeaf248cf6bf8ad4d04b757d5346",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Stats inventory view type: either 'item' for count or 'price' for sum of prices",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "item",
                                "price"
                            ],
                            "example": "item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Favorite"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/total_by_room/{type}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total inventory by room",
                "description": "This request is used to get total inventory by its room. This request is using MySql database, and have a protected routes.",
                "operationId": "9035d1bb4430f8120c7764c4551f0e02",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Stats inventory view type: either 'item' for count or 'price' for sum of prices",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "item",
                                "price"
                            ],
                            "example": "item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Main Room"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/total_by_merk/{type}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total inventory by merk",
                "description": "This request is used to get total inventory by its merk. This request is using MySql database, and have a protected routes.",
                "operationId": "b72cac1e9b4940bbadbe7d513ca40b6b",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Stats inventory view type: either 'item' for count or 'price' for sum of prices",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "item",
                                "price"
                            ],
                            "example": "item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Fashion"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/report/total_created_per_month/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total report created per month",
                "description": "This request is used to get total report created per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "b0542a17b6b2e7cc415e69f13d00b66d",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Report created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total_report": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_item": {
                                                        "type": "integer",
                                                        "example": 8
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/inventory/total_created_per_month/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total inventory created per month",
                "description": "This request is used to get total inventory created per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "8b4c8a4a948fd044d03ef932ce6c8770",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Inventory created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/history/total_activity_per_month/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total activity per month",
                "description": "This request is used to get total activity per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "f3709c0324e990d2d0f6b055730ae96c",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Activity created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/user/last_login": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get last user login",
                "description": "This request is used to get list of last user login. This request is using MySql database, and have a protected routes.",
                "operationId": "5ef1c834e01529f13eb8200c3c95bb14",
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "login_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-03-14 02:28:37"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/user/leaderboard": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get user leaderboard",
                "description": "This request is used to get user leaderboard. This request is using MySql database, and have a protected routes.",
                "operationId": "ffe23aab9a5c9e83bb9e07d32cb29e37",
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_with_most_inventory": {
                                                    "properties": {
                                                        "username": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "user_with_most_report": {
                                                    "properties": {
                                                        "username": {
                                                            "type": "string",
                                                            "example": "Jane Smith"
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 22
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/report/total_spending_per_month/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total report spending per month",
                "description": "This request is used to get total report created per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "a5d69a0810b3436246daa68a793d2929",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Report created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total_price": {
                                                        "type": "integer",
                                                        "example": 20000
                                                    },
                                                    "total_item": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "average_price_per_item": {
                                                        "type": "integer",
                                                        "example": 10000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/report/total_used_per_month/{year}": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get total report spending per month",
                "description": "This request is used to get total report created per month by given `year`. This request is using MySql database, and have a protected routes.",
                "operationId": "f0b74aeb34555c517f1ef3ef94b25946",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Report created year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "2024"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "context": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "total_washlist": {
                                                        "type": "integer",
                                                        "example": 14
                                                    },
                                                    "total_checkout": {
                                                        "type": "integer",
                                                        "example": 4
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stats/dashboard": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Get dashboard",
                "description": "This request is used to get inventory dashboard. This request is using MySql database, and have a protected routes.",
                "operationId": "2eb4a30c320e91085f38931b2fbe87c0",
                "responses": {
                    "200": {
                        "description": "stats fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_item": {
                                                    "type": "integer",
                                                    "example": 14
                                                },
                                                "total_fav": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "total_low": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "last_added": {
                                                    "type": "string",
                                                    "example": "New Balance"
                                                },
                                                "most_category": {
                                                    "properties": {
                                                        "context": {
                                                            "type": "string",
                                                            "example": "Skin & Body Care"
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 8
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "highest_price": {
                                                    "properties": {
                                                        "inventory_name": {
                                                            "type": "string",
                                                            "example": "New Balance"
                                                        },
                                                        "inventory_price": {
                                                            "type": "integer",
                                                            "example": 2249000
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "stats failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "stats not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/update_telegram_id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update telegram token id",
                "operationId": "b3319a420453e08af500d97aa4d48b6d",
                "responses": {
                    "200": {
                        "description": "telegram id updated! and validation has been sended to you",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "telegram id updated! and validation has been sended to you"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "telegram id failed to update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "telegram user id has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "telegram ID has been used. try another"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/update_profile": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update profile",
                "operationId": "d8307a36aad6b3e10693a92193f8d4ad",
                "responses": {
                    "200": {
                        "description": "profile updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "profile updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "telegram id failed to update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "username / email has been used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "username or email has been used. try another"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/register/token": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Check and send validation token to the user who in registration process",
                "operationId": "f9a08af4b40b9ac720ec6222bb337c0f",
                "responses": {
                    "200": {
                        "description": "the validation token has been sended to {email} email account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "the validation token has been sended to flazen.edu@gmail.com email account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "there already a request with same username / username has been used. try another",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "there already a request with same username"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register/account": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register account and accept validation",
                "operationId": "29226b21d6a5a79d2e87ade3dfed667f",
                "responses": {
                    "200": {
                        "description": "account is registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "account is registered"
                                        },
                                        "is_signed_in": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "123456ABCD"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "token is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "username already used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "username has been used. try another"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "{validation_msg}",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "{field validation message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register/regen_token": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Regenerate registration token",
                "operationId": "de83a252f4cbd7f245743ba8e36c2da2",
                "responses": {
                    "200": {
                        "description": "the validation token has been sended to {email} email account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "the validation token has been sended to flazen.edu@gmail.com email account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "request not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "the validation token has been sended to flazen.edu@gmail.com email account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/update_timezone_fcm": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user timezone",
                "operationId": "a8507903e83d7a4e0cc32bc26c47889f",
                "responses": {
                    "200": {
                        "description": "firebase message token / timezone has been updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "timezone has been updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Timezone is invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "timezone is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/validate_telegram_id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Validate telegram id change",
                "operationId": "de1ceb7d57fb3bab1493d6315a623752",
                "responses": {
                    "200": {
                        "description": "telegram id has been validated"
                    },
                    "404": {
                        "description": "validation token is not valid"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User By Id",
                "operationId": "4f449371c0150bb9392a121f7b4fd6f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "e1288783-a5d4-1c4c-2cd6-0e92f7cc3bf9"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/my_profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get my profile",
                "description": "This request is used to get user profile info. This request is using MySql database, and have a protected routes",
                "operationId": "c286fe042f9492a53f1a424547fa83e4",
                "responses": {
                    "200": {
                        "description": "user fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user fetched"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "17963858-9771-11ee-8f4a-3216422910r4"
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "flazefy"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "flazen.edu@gmail.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "telegram_user_id": {
                                                    "type": "string",
                                                    "example": "1317625970"
                                                },
                                                "telegram_is_valid": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-20 22:53:47"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "telegram_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "6f59235e-c398-8a83-2f95-3f1fbe95ca6e"
                                                },
                                                "request_type": {
                                                    "type": "string",
                                                    "example": "register"
                                                },
                                                "request_context": {
                                                    "type": "string",
                                                    "example": "OUW36L"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-20 22:53:47"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all user",
                "description": "This request is used to get all user. This endpoint for Admin only. This request is using MySql database, and have a protected routes",
                "operationId": "0068e396297c4f55d9c717181a67e82b",
                "responses": {
                    "200": {
                        "description": "user fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "17963858-9771-11ee-8f4a-3216422910r4"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "flazefy"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "flazen.edu@gmail.com"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "user"
                                                    },
                                                    "telegram_user_id": {
                                                        "type": "string",
                                                        "example": "1317625970"
                                                    },
                                                    "telegram_is_valid": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-09-20 22:53:47"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/my_year": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get My Content's Year",
                "description": "This request is used to get all available year to selected in filter based on created date inventory or report. This request is using MySql database, and have a protected routes",
                "operationId": "8f8d65302095f16adbc3960a60221f37",
                "responses": {
                    "200": {
                        "description": "user year fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user year fetched"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "year": {
                                                        "type": "integer",
                                                        "example": 2023
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "protected route need to include sign in token as authorization bearer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you need to include the authorization token from login | permission denied. only admin can use this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user year failed to fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user year not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something wrong. please contact admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "DictionaryResponse": {
                "properties": {
                    "dictionary_name": {
                        "type": "string",
                        "example": "Check"
                    },
                    "dictionary_type": {
                        "type": "string",
                        "example": "inventory_category"
                    },
                    "_id": {
                        "type": "string",
                        "example": "674342a8b53aabe966070f3d"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-24T15:13:44.621Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-24T15:13:44.621Z"
                    }
                },
                "type": "object"
            },
            "Admin": {
                "required": [
                    "id",
                    "username",
                    "password",
                    "email",
                    "telegram_is_valid",
                    "password",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "telegram_user_id": {
                        "description": "Telegram Account ID for Bot Apps",
                        "type": "string"
                    },
                    "telegram_is_valid": {
                        "description": "Validation status of attached telegram account",
                        "type": "boolean"
                    },
                    "firebase_fcm_token": {
                        "description": "FCM Notification Token for Mobile Apps",
                        "type": "string"
                    },
                    "line_user_id": {
                        "description": "Line Account ID for Bot Apps",
                        "type": "string"
                    },
                    "username": {
                        "description": "Unique Identifier for admin",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "UTC timezone for Task Scheduling",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the admin was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the admin was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Dictionary": {
                "required": [
                    "dictionary_type",
                    "dictionary_name"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "dictionary_type": {
                        "description": "Type of the dictionary",
                        "type": "string"
                    },
                    "dictionary_name": {
                        "description": "Name of the dictionary",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Error": {
                "required": [
                    "id",
                    "message",
                    "stack_trace",
                    "file",
                    "line",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Message or description of the error",
                        "type": "string"
                    },
                    "stack_trace": {
                        "description": "Trail of function calls leading up to the error",
                        "type": "string"
                    },
                    "file": {
                        "description": "Path of the file where the error is faced",
                        "type": "string"
                    },
                    "line": {
                        "description": "Line of code in specific file where the error is faced",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when the error was faced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fixed_at": {
                        "description": "Timestamp when the dev team finally fix and deploy the bug / error fix",
                        "type": "string",
                        "format": "date-time"
                    },
                    "faced_by": {
                        "description": "ID of the user who specific faced the error",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "FailedJobs": {
                "required": [
                    "id",
                    "type",
                    "status",
                    "payload",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the failed jobs on Task Scheduling",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the failed jobs on Task Scheduling",
                        "type": "string"
                    },
                    "payload": {
                        "description": "Respond / Payload from the error",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the jobs had failed",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Google Tokens": {
                "required": [
                    "id",
                    "access_token",
                    "expiry",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "access_token": {
                        "description": "Access token of Google Sign In",
                        "type": "string"
                    },
                    "expiry": {
                        "description": "Expire datetime of access token",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user created the history",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the history",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "History": {
                "required": [
                    "id",
                    "history_type",
                    "history_context",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "history_type": {
                        "description": "Type of the history",
                        "type": "string"
                    },
                    "history_context": {
                        "description": "Context of the history",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user created the history",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the history",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "inventory_layout": {
                "required": [
                    "id",
                    "inventory_room",
                    "inventory_storage",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the inventory layout",
                        "type": "string",
                        "format": "uuid"
                    },
                    "inventory_room": {
                        "description": "Room where the inventory is located",
                        "type": "string"
                    },
                    "inventory_storage": {
                        "description": "Storage location of the inventory",
                        "type": "string"
                    },
                    "storage_desc": {
                        "description": "Storage description",
                        "type": "string"
                    },
                    "layout": {
                        "description": "Coordinate of the storage",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the inventory layout was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the inventory layout",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Inventory": {
                "required": [
                    "id",
                    "inventory_name",
                    "inventory_category",
                    "inventory_room",
                    "inventory_price",
                    "inventory_unit",
                    "is_favorite",
                    "is_reminder",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the inventory",
                        "type": "string",
                        "format": "uuid"
                    },
                    "inventory_name": {
                        "description": "Name of the inventory",
                        "type": "string"
                    },
                    "inventory_category": {
                        "description": "Category of the inventory",
                        "type": "string"
                    },
                    "inventory_desc": {
                        "description": "Description of the inventory",
                        "type": "string"
                    },
                    "inventory_merk": {
                        "description": "Merk or brand of the inventory",
                        "type": "string"
                    },
                    "inventory_color": {
                        "description": "Color of the inventory",
                        "type": "string"
                    },
                    "inventory_room": {
                        "description": "Room where the inventory is located",
                        "type": "string"
                    },
                    "inventory_storage": {
                        "description": "Storage location of the inventory",
                        "type": "string"
                    },
                    "inventory_rack": {
                        "description": "Rack or location within the storage",
                        "type": "string"
                    },
                    "inventory_price": {
                        "description": "Price of the inventory",
                        "type": "number",
                        "format": "float"
                    },
                    "inventory_image": {
                        "description": "Firebase Storage URL to the image of the inventory",
                        "type": "string",
                        "format": "url"
                    },
                    "inventory_unit": {
                        "description": "Unit of measurement for the inventory",
                        "type": "string"
                    },
                    "inventory_vol": {
                        "description": "Volume of the inventory",
                        "type": "number",
                        "format": "float"
                    },
                    "inventory_capacity_unit": {
                        "description": "Unit of capacity for the inventory",
                        "type": "string"
                    },
                    "inventory_capacity_vol": {
                        "description": "Capacity volume of the inventory",
                        "type": "number",
                        "format": "float"
                    },
                    "is_favorite": {
                        "description": "Indicates if the inventory is marked as a favorite",
                        "type": "boolean"
                    },
                    "is_reminder": {
                        "description": "Indicates if a reminder is set for the inventory",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Timestamp when the inventory was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the inventory",
                        "type": "string",
                        "format": "uuid"
                    },
                    "updated_at": {
                        "description": "Timestamp when the inventory was updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Timestamp when the inventory was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Lend Inventory Relation": {
                "required": [
                    "id",
                    "lend_id",
                    "inventory_id",
                    "borrower_name",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the lend",
                        "type": "string",
                        "format": "uuid"
                    },
                    "lend_id": {
                        "description": "ID of the lend",
                        "type": "string"
                    },
                    "inventory_id": {
                        "description": "Id of the inventory",
                        "type": "number",
                        "format": "float"
                    },
                    "borrower_name": {
                        "description": "Name / username of the borrower",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the lend inventory relation was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Lend": {
                "required": [
                    "id",
                    "lend_qr_url",
                    "qr_period",
                    "lend_desc",
                    "lend_status",
                    "created_at",
                    "created_by",
                    "is_finished"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the lend",
                        "type": "string",
                        "format": "uuid"
                    },
                    "lend_qr_url": {
                        "description": "QR Code uploaded file url",
                        "type": "string"
                    },
                    "qr_period": {
                        "description": "Period of qr to expired (in hour)",
                        "type": "number",
                        "format": "float"
                    },
                    "lend_desc": {
                        "description": "Description of the lending",
                        "type": "string"
                    },
                    "lend_status": {
                        "description": "Status of the lend",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the lend was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the lend",
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_finished": {
                        "description": "Finished status of lending",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PersonalAccessToken": {
                "required": [
                    "id",
                    "tokenable_type",
                    "tokenable_id",
                    "name",
                    "token",
                    "abilities",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "tokenable_type": {
                        "description": "Model / Role who generated the auth token",
                        "type": "string"
                    },
                    "tokenable_id": {
                        "description": "ID of the user who generated the auth token",
                        "type": "string"
                    },
                    "name": {
                        "description": "Source of the auth token generated",
                        "type": "string"
                    },
                    "token": {
                        "description": "Auth token that will be used for Auth Bearer all the protected API",
                        "type": "string"
                    },
                    "abilities": {
                        "description": "Ability of auth token",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the auth token was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the auth token was updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "expires_at": {
                        "description": "Timestamp when the auth token will expired",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used_at": {
                        "description": "Timestamp when the last time token was used for calling other protected API",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Reminder": {
                "required": [
                    "id",
                    "inventory_id",
                    "reminder_desc",
                    "reminder_type",
                    "reminder_context",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the reminder",
                        "type": "string",
                        "format": "uuid"
                    },
                    "inventory_id": {
                        "description": "ID of the inventory",
                        "type": "string",
                        "format": "uuid"
                    },
                    "reminder_desc": {
                        "description": "Description of the reminder",
                        "type": "string"
                    },
                    "reminder_type": {
                        "description": "Type of the reminder",
                        "type": "string"
                    },
                    "reminder_context": {
                        "description": "Context of the reminder",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the reminder was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the reminder",
                        "type": "string",
                        "format": "uuid"
                    },
                    "updated_at": {
                        "description": "Timestamp when the reminder was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReportItem": {
                "required": [
                    "id",
                    "report_id",
                    "item_name",
                    "item_qty",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary key for the report item",
                        "type": "string",
                        "format": "uuid"
                    },
                    "inventory_id": {
                        "description": "ID of the inventory",
                        "type": "string",
                        "format": "uuid"
                    },
                    "report_id": {
                        "description": "ID of the report",
                        "type": "string",
                        "format": "uuid"
                    },
                    "item_name": {
                        "description": "Name of the item",
                        "type": "string"
                    },
                    "item_desc": {
                        "description": "Description of the item",
                        "type": "string"
                    },
                    "item_qty": {
                        "description": "Quantity of the item",
                        "type": "integer"
                    },
                    "item_price": {
                        "description": "Price of the item",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Timestamp when the report item was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the report item",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "Report": {
                "required": [
                    "id",
                    "report_title",
                    "report_category",
                    "is_reminder",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "report_title": {
                        "description": "Title of the report",
                        "type": "string"
                    },
                    "report_desc": {
                        "description": "Description of the report",
                        "type": "string"
                    },
                    "report_category": {
                        "description": "Category of the report",
                        "type": "string"
                    },
                    "report_image": {
                        "description": "Images of the report",
                        "type": "string"
                    },
                    "is_reminder": {
                        "description": "Indicates if a reminder is set for the report",
                        "type": "string"
                    },
                    "remind_at": {
                        "description": "Timestamp when the report remind to user",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Timestamp when the user created the report",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user updated the report",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Timestamp when the user deleted the report",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who created the report",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            },
            "ScheduleMark": {
                "required": [
                    "id",
                    "reminder_id",
                    "last_execute"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "reminder_id": {
                        "description": "ID of the reminder",
                        "type": "string"
                    },
                    "last_execute": {
                        "description": "Timestamp when the reminder was executed",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Users": {
                "required": [
                    "id",
                    "username",
                    "password",
                    "email",
                    "telegram_is_valid",
                    "password",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "string",
                        "format": "uuid"
                    },
                    "telegram_user_id": {
                        "description": "Telegram Account ID for Bot Apps",
                        "type": "string"
                    },
                    "telegram_is_valid": {
                        "description": "Validation status of attached telegram account",
                        "type": "boolean"
                    },
                    "firebase_fcm_token": {
                        "description": "FCM Notification Token for Mobile Apps",
                        "type": "string"
                    },
                    "line_user_id": {
                        "description": "Line Account ID for Bot Apps",
                        "type": "string"
                    },
                    "username": {
                        "description": "Unique Identifier for user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email for Auth and Task Scheduling",
                        "type": "string"
                    },
                    "password": {
                        "description": "Sanctum Hashed Password",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone number for Task Scheduling and OTP Auth",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "UTC timezone for Task Scheduling",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ValidateRequest": {
                "required": [
                    "id",
                    "request_type",
                    "request_context",
                    "created_at",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "description": "Primary Key",
                        "type": "integer"
                    },
                    "request_type": {
                        "description": "Type of the request",
                        "type": "string"
                    },
                    "request_context": {
                        "description": "Context of the request",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Timestamp when the user make the request",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "ID of the user who make the request",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Dictionary",
            "description": "Dictionary"
        },
        {
            "name": "Error",
            "description": "Error"
        },
        {
            "name": "History",
            "description": "History"
        },
        {
            "name": "Inventory",
            "description": "Inventory"
        },
        {
            "name": "Lend",
            "description": "Lend"
        },
        {
            "name": "Reminder",
            "description": "Reminder"
        },
        {
            "name": "Report",
            "description": "Report"
        },
        {
            "name": "Analyze",
            "description": "Analyze"
        },
        {
            "name": "Stats",
            "description": "Stats"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}